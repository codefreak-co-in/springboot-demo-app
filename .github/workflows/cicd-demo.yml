

name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  compile:
    runs-on: ubuntu-latest
    steps:
        - name: Checkout repository
          uses: actions/checkout@v3
    
        - name: Set up JDK 17
          uses: actions/setup-java@v3
          with:
            java-version: '17'
            distribution: 'temurin'
    
        - name: Compile the code
          run: mvn compile
        
#  running-tests:
#    runs-on: ubuntu-latest
#    needs: compile
#    steps:
#        - name: Checkout repository
#          uses: actions/checkout@v3
#
#        - name: Set up JDK 17
#          uses: actions/setup-java@v3
#          with:
#            java-version: '17'
#            distribution: 'temurin'
#
#        - name: Run unit tests
#          run: mvn test

  packaging:
    runs-on: ubuntu-latest
    needs: compile
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Package JAR
        run: mvn package -DskipTests

      - name: Upload JAR Artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-jar
          path: target/todo-0.0.1-SNAPSHOT.jar

  docker-deploy:
      runs-on: ubuntu-latest
      needs: packaging
      steps:
        - uses: actions/checkout@v3

        - name: Download JAR Artifact
          uses: actions/download-artifact@v4
          with:
            name: app-jar
            path: target/

        - name: Setup Docker
          uses: docker/setup-buildx-action@v2

        - name: Login to Docker Hub
          uses: docker/login-action@v3
          with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}

        - name: Build Docker image
          run: docker build -t ${{ secrets.DOCKER_USERNAME }}/myapp:${{ github.sha }}  .
    
        - name: Push Docker image
          run: docker push ${{ secrets.DOCKER_USERNAME }}/myapp:${{ github.sha }}

  prod-deploy:
    runs-on: ubuntu-latest
    needs: docker-deploy
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Upload deploy.sh to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          source: deploy.sh
          target: /home/ubuntu/todo/

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            chmod +x /home/ubuntu/todo/deploy.sh
            /home/ubuntu/todo/deploy.sh ${{ secrets.DOCKER_USERNAME }}/myapp:${{ github.sha }}




#        This is not usefull as of now
#      - name: Checkout repository
#        uses: actions/checkout@v3
#
#      - name: Set SSH Key
#        run: |
#          mkdir -p ~/.ssh
#          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
#          chmod 600 ~/.ssh/id_rsa
#          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts
#
#      - name: Copy deployment script to EC2
#        run: |
#          scp -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no deploy.sh ubuntu@${{ secrets.EC2_HOST }}:/home/ubuntu/deploy.sh
#      - name: Run deployment script on EC2
#        run: |
#          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no -T ubuntu@${{ secrets.EC2_HOST }} \
#          "chmod +x /home/ubuntu/deploy.sh && /home/ubuntu/deploy.sh ${{ secrets.DOCKER_USERNAME }}/myapp:${{ github.sha }}"
